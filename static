#include <stdio.h>

int stat()
{
    static int a;
    a++;
    return a;
    
}
int main(){
    printf("%d\n",stat());
    printf("%d\n",stat());
    printf("%d\n",stat());
    printf("%d\n",stat());
    printf("%d\n",stat());
    
}




#include <stdio.h>

int main()
{
    static int a=10;
    int y;
    printf("%d\n",a++);
    printf("%d\n",a++);
    printf("%d\n",y++);
    // return y;
    // return a;
    
}


This storage class is used to declare static variables which are popularly used while writing programs in C language. Static variables have the property of preserving their value even after they are out of their scope! Hence, static variables preserve the value of their last use in their scope. So we can say that they are initialized only once and exist till the termination of the program. Thus, no new memory is allocated because they are not re-declared. Their scope is local to the function to which they were defined. Global static variables can be accessed anywhere in the program. By default, they are assigned the value 0 by the compiler. 
 
